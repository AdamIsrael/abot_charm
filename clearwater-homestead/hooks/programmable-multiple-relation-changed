#!/bin/bash
set -e
juju-log "Invoking dns-relation"

dns_ip=$(relation-get private-address)
if [ -z "$dns_ip" ]; then
  juju-log "No data sent yet from DNS"
  exit 0
fi

# Set our DNS requirements
id=$(cut -d/ -f2 <<< $JUJU_UNIT_NAME)
ip=$(unit-get private-address)
relation-set domain=$(config-get zone)
DNS_JSON=$($CHARM_DIR/lib/generate_dns_records $ip homestead homestead-$id)
relation-set resources="$DNS_JSON"

# Update our DNS server
if [ "$dns_ip" != "" ]
then
  echo nameserver $dns_ip > /etc/dnsmasq.resolv.conf
  grep -v ^RESOLV_CONF= /etc/default/dnsmasq > /tmp/dnsmasq.$$
  mv /tmp/dnsmasq.$$ /etc/default/dnsmasq
  echo RESOLV_CONF=/etc/dnsmasq.resolv.conf >> /etc/default/dnsmasq
  service dnsmasq restart
fi

# Change Resolvconf order and make dnsmasq on top
dnsmasq=lo.dnsmasq
resolvconf=/etc/resolvconf
loinet=`grep  ^[a-z] /etc/resolvconf/interface-order | head -n1`
 if [ $loinet != $dnsmasq ]
   then
       cp /etc/resolvconf/interface-order /etc/resolvconf/interface-order.orig
          sed  '/'$dnsmasq'/d' /etc/resolvconf/interface-order.orig > /etc/resolvconf/interface-order
          sed -i '/'$loinet'/i lo.dnsmasq' /etc/resolvconf/interface-order
          service dnsmasq restart
          resolvconf -u
   else
    exit 0
 fi

# Verify DNS record to make sure that IMS dns is working properly
if [[ `dig +short $ip` =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]
   then
    juju-log "Verifying $ip in dns "
    exit
 elif [[ "$ip" =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]
   then
    juju-log "Verifying $ip in dns "
    exit
 else
    juju-log "Unable to fetch $ip changing  dns order to original"
  cp /etc/resolvconf/interface-order.orig /etc/resolvconf/interface-order
  resolvconf -u
fi

# Update Clearwater configuration and restart
$CHARM_DIR/lib/config_script programmable-multiple
$CHARM_DIR/lib/restart
